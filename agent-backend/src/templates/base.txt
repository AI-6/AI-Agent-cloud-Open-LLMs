import autogen
from autogen import AssistantAgent, GroupChat, GroupChatManager, UserProxyAgent
from init.env_variables import SOCKET_URL, BASE_PATH
from socketio.simple_client import SimpleClient
from random import randint

session_id = f"{{session_id}}"

socket = SimpleClient()
socket.connect(url=SOCKET_URL)
socket.emit("join_room", f"_{session_id}")

{% for role in roles %}
{{ role.name|format_role_name }}_config = {
    "seed": randint(1, 1000),
    "temperature": 0,
    "request_timeout": 300,
    "retry_wait_time": 60,
    "config_list":[{
        "api_key" : "{{role.key}}",
        "api_type" : "{{role.platform}}",
        "model" : "{{role.model}}"
        }]
}
{% endfor %}

{% for role in roles %}
{% if role.is_user_proxy %}
user_proxy = UserProxyAgent(
    name="Admin",
    llm_config={{ role.name|format_role_name }}_config,
    system_message="""{{ role.system_message }}""",
    human_input_mode="{{ role.human_input_mode | default(ALWAYS) }}",
    code_execution_config={{ role.code_execution_config | default(False) }},
    use_sockets=True,
    socket_client=socket,
    sid=session_id
)
{% else %}
{{ role.name|format_role_name }} = {{ role.type }}(
    name="{{ role.name|format_role_name }}",
    llm_config={{ role.name|format_role_name }}_config,
    system_message="""{{ role.system_message }}""",
    human_input_mode="{{ role.human_input_mode | default(NEVER) }}",
    code_execution_config={{ role.code_execution_config| default(False) }},
    use_sockets=True,
    socket_client=socket,
    sid=session_id
)
{% endif %}
{% endfor %}

{% if group_chat %}
groupchat = GroupChat(agents=[user_proxy{% for role in roles %}{% if not role.is_user_proxy %}, {{ role.name|format_role_name }}{% endif %}{% endfor %}], messages=[], max_round=50)
manager = GroupChatManager( groupchat=groupchat, llm_config=admin_config, use_sockets=True, socket_client=socket, sid=session_id)
{% endif %}